{"data":{"recommends":[{"createTime":1480730772000,"category":"sdk","recommendContent":{"id":"922b35b509b0103583ab4799290088aa","createTime":1480663493000,"slogan":"这是一条标语！","category":"sdk","articlesCount":3,"followersCount":4,"creater":{"alias":"xiao-ruo-tian-he-2","petName":"笑若天河","photo":"/resource/person/xiao-ruo-tian-he-1/photo/mugshot/0D3CE20BC8813E1989CBA02B95BD6FA8.jpeg"},"isFollowed":true,"shortName":"Pinyin4j","intro":"这是SDK的描述部分，多余的文字可以隐藏，通过更多来展开和收起。内容要长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长。"},"creater":{"alias":"xiao-ruo-tian-he-2","petName":"笑若天河","photo":"/resource/person/xiao-ruo-tian-he-1/photo/mugshot/0D3CE20BC8813E1989CBA02B95BD6FA8.jpeg"}},{"createTime":1480664820000,"category":"article","recommendContent":{"summary":"缓存是介于应用程序和物理数据源之间，缓存内的数据是对物理数据源中的数据的复制，其作用是为了降低应用程序对物理数据源访问的频次，从而提高了应用的运行性能。","id":"8e89e3dd09ad103583ab4799290088aa","createTime":1480662207000,"category":"article","title":"hibernate的缓存机制","score":5.0,"commentsCount":1,"creater":{"alias":"xiao-ruo-tian-he-2","petName":"笑若天河","photo":"/resource/person/xiao-ruo-tian-he-1/photo/mugshot/0D3CE20BC8813E1989CBA02B95BD6FA8.jpeg"}},"creater":{"alias":"xiao-ruo-tian-he-2","petName":"笑若天河","photo":"/resource/person/xiao-ruo-tian-he-1/photo/mugshot/0D3CE20BC8813E1989CBA02B95BD6FA8.jpeg"}},{"createTime":1480664801000,"category":"article","recommendContent":{"summary":" Hibernate批量处理（批量插入、批量更新、批量删除），实体对象生命周期（transient（瞬时态）、persisent（持久态）、Detached（脱管状态）），Hibernate事务管理（基于JDBC的事务管理、基于JTA的事务管理概念），锁。","id":"752a2a9d09ad103583ab4799290088aa","createTime":1480662163000,"category":"article","title":"Hibernate高级功能","score":0.0,"commentsCount":0,"creater":{"alias":"xiao-ruo-tian-he-2","petName":"笑若天河","photo":"/resource/person/xiao-ruo-tian-he-1/photo/mugshot/0D3CE20BC8813E1989CBA02B95BD6FA8.jpeg"}},"creater":{"alias":"xiao-ruo-tian-he-2","petName":"笑若天河","photo":"/resource/person/xiao-ruo-tian-he-1/photo/mugshot/0D3CE20BC8813E1989CBA02B95BD6FA8.jpeg"}},{"createTime":1480664783000,"category":"article","recommendContent":{"summary":"Mybatis是一个持久层框架，是对JDBC的封装","id":"4ae259de09aa103583ab4799290088aa","createTime":1480660923000,"category":"article","title":"Mybatis框架基础学习（一）","score":0.0,"commentsCount":0,"creater":{"alias":"xiao-ruo-tian-he-2","petName":"笑若天河","photo":"/resource/person/xiao-ruo-tian-he-1/photo/mugshot/0D3CE20BC8813E1989CBA02B95BD6FA8.jpeg"}},"creater":{"alias":"xiao-ruo-tian-he-2","petName":"笑若天河","photo":"/resource/person/xiao-ruo-tian-he-1/photo/mugshot/0D3CE20BC8813E1989CBA02B95BD6FA8.jpeg"}},{"createTime":1480664751000,"category":"article","recommendContent":{"summary":"最近需要对项目的持久层进行优化，阅读了《深入浅出Hibernate》其中提出的提高性能方案总结如下","id":"3faee0f309ad103583ab4799290088aa","createTime":1480662079000,"category":"article","title":"Hibernate 优化策略","score":0.0,"commentsCount":0,"creater":{"alias":"xiao-ruo-tian-he-2","petName":"笑若天河","photo":"/resource/person/xiao-ruo-tian-he-1/photo/mugshot/0D3CE20BC8813E1989CBA02B95BD6FA8.jpeg"}},"creater":{"alias":"xiao-ruo-tian-he-2","petName":"笑若天河","photo":"/resource/person/xiao-ruo-tian-he-1/photo/mugshot/0D3CE20BC8813E1989CBA02B95BD6FA8.jpeg"}}]},"status":true,"errors":[]}